<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4X9TsHgPzu4ACgAAAABJRU5ErkJggg==
</value>
  </data>
</root>